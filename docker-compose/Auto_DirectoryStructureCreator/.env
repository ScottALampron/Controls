# Variables file

# Directories
BASE_DIR="consolidation"
backup_path=""        # Set to specific path if needed
compose_path=""       # Set to specific path if needed
config_path=""        # Set to specific path if needed
media_path=""         # Set to specific path if needed
db_path=""            # Set to specific path if needed
log_path=""           # Set to specific path if needed
scripts_path=""       # Set to specific path if needed
vip_path=""           # Set to specific path if needed

# Service groups
backup_services=("duplicati" "rsync")
torrent_services=("qbittorrent" "transmission")
rr_services=("radarr" "sonarr" "lidarr")
monitoring_services=("grafana" "prometheus" "netdata")
network_services=("authentik" "ldap" "traefik" "ddns")
web_services=("homepage" "jekyll" "code-server")

# DB services
db_services=("${services[@]}")

media_services=("plex" "jellyfin" "${rr_services[@]}" "${torrent_services[@]}")

# All services
#services=("${db_services[@]}" "${backup_services[@]}" "${monitoring_services[@]}" "${network_services[@]}" "${media_services[@]}" "${web_services[@]}" "keepalived")
services=("${backup_services[@]}" "${monitoring_services[@]}" "${network_services[@]}" "${media_services[@]}" "${web_services[@]}" "keepalived")

# Media subdirectories
media_subdirs=("videos" "musics" "photos" "tv" "rr_feed")

# Script and env file names
scripts=("setup.sh" "backup.sh" "sync.sh" "cronjobs.sh")
env_files=(".env" "${services[@]}")

# Docker compose file
DC_F="docker-compose.yml"

# Enable/Disable sections (true/false)
ENABLE_BACKUP=true        # Enable backup services
ENABLE_MEDIA=true         # Enable media directories
ENABLE_NETWORK=true       # Enable network services
ENABLE_DB=true            # Enable database services
ENABLE_MONITORING=true    # Enable monitoring services
ENABLE_VIP=true           # Enable VIP (e.g., keepalived) services
ENABLE_WEB=true           # Enable web services
ENABLE_SCRIPTS=true       # Enable script creation
ENABLE_LOGS=true          # Enable log creation
#VERBOSE=true              # Enable verbose output and logging to file
